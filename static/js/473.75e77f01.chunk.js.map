{"version":3,"file":"static/js/473.75e77f01.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Spinner/Spinner.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.jsx","components/EditContactForm/EditContactForm.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  font-size: 20px;\n  font-weight: 500;\n  color: #14084e; ;\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  padding: 5px 5px 5px 10px;\n  border-radius: 20px;\n  margin-bottom: 10px;\n  background-color: #8ed9fc;\n  box-shadow: 2px 2px 5px #3d3d3d;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const NumberWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\nexport const ListItemButton = styled.button`\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: transparent;\n`;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport default function Spinner() {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"25\"\n      width=\"25\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#b9111c', '#b9111c', '#b9111c', '#b9111c', '#b9111c']}\n    />\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { showEditingForm } from 'redux/contactsFormSlice';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  UserWrapper,\n  Wrapper,\n  NumberWrapper,\n  ListItemButton,\n} from './ContactListItem.styled';\nimport { TiUser, TiDelete, TiEdit } from 'react-icons/ti';\nimport { BsTelephoneForwardFill } from 'react-icons/bs';\nimport { useDeleteContactMutation } from 'redux/operations';\nimport Spinner from 'components/Spinner';\n\nexport default function ContactListItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const [deleteContact, { isLoading, error }] = useDeleteContactMutation();\n\n  const handleEditButton = () => {\n    dispatch(showEditingForm({ name, number, id }));\n  };\n\n  return (\n    <UserWrapper>\n      <Wrapper>\n        <TiUser size={25} color={'#09139c'} />\n        <ListItem>{name}</ListItem>\n      </Wrapper>\n      <NumberWrapper>\n        <BsTelephoneForwardFill size={18} color={'#09139c'} />\n        <ListItem>{number}</ListItem>\n        <ListItemButton\n          type=\"button\"\n          onClick={handleEditButton}\n          disabled={isLoading}\n        >\n          <TiEdit size={25} color={'#09139c'} />\n        </ListItemButton>\n        <ListItemButton\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          {isLoading && !error ? (\n            <Spinner size={25} />\n          ) : (\n            <TiDelete size={25} color={'#c00a0a'} />\n          )}\n        </ListItemButton>\n      </NumberWrapper>\n    </UserWrapper>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\n\nimport ContactListItem from 'components/ContactListItem';\n\nexport default function ContactList() {\n  const { data } = useGetContactsQuery();\n  const filterValue = useSelector(selectFilter);\n\n  const visibleContacts =\n    data !== undefined\n      ? data\n          .filter(contact =>\n            contact.name\n              .toLowerCase()\n              .includes(filterValue.toLowerCase().trim())\n          )\n          .sort((a, b) => a.name.localeCompare(b.name))\n      : [];\n  return (\n    <List>\n      {visibleContacts.length !== 0 &&\n        visibleContacts.map(contact => {\n          const { name, id, number } = contact;\n          return (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          );\n        })}\n    </List>\n  );\n}\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const AddingForm = styled(Form)`\n  display: flex;\n  align-items: flex-end;\n  gap: 50px;\n  width: 800px;\n  margin-bottom: 30px;\n  padding: 20px 0 40px 20px;\n  font-weight: 500;\n\n  color: #2e1392;\n  background-color: #828bbd;\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 250px;\n  outline: transparent;\n  padding: 10px 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 1px 1px 6px #3d3d3d;\n\n  &::placeholder {\n    font-size: 16px;\n    color: #b6b3b3;\n    padding-left: 10px;\n  }\n`;\nexport const ErrWrapper = styled.span`\n  font-size: 14px;\n  color: #b10606;\n  position: absolute;\n  top: 76px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n\n  height: 40px;\n  color: #170674;\n  border: 1px solid #8775f0;\n  border-radius: 20px;\n  padding: 10px 15px;\n  background-color: #72c0e4;\n  cursor: pointer;\n  box-shadow: 2px 2px 5px #3d3d3d;\n\n  &:hover,\n  &:focus {\n    border-color: #170674;\n    background-color: #170674;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    background-color: #ffffff;\n    color: #bdbdbd;\n    font-weight: 500;\n    cursor: auto;\n  }\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <ThreeDots\n      height=\"25\"\n      width=\"60\"\n      radius=\"1\"\n      color=\"#09139c\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n}\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport {\n  AddingForm,\n  InputLabel,\n  Button,\n  Input,\n  ErrWrapper,\n  InputWrapper,\n} from './ContactForm.styled';\nimport Loader from 'components/Loader';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/operations';\nimport { showContactsList } from 'redux/contactsFormSlice';\nimport { useDispatch } from 'react-redux';\n\nconst initialsValues = {\n  name: '',\n  number: '',\n};\n\nconst FormSchema = yup.object().shape({\n  name: yup.string().min(2).required(),\n  number: yup.string().min(13).max(13).phone('UA').required(),\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const { data } = useGetContactsQuery();\n  const [addContact, { error, isLoading }] = useAddContactMutation();\n\n  const handleSubmitForm = (values, { resetForm }) => {\n    const existingUsers = data.map(contact => contact.name);\n\n    if (existingUsers.includes(values.name)) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    addContact(values);\n    dispatch(showContactsList(true));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialsValues}\n      onSubmit={handleSubmitForm}\n      validationSchema={FormSchema}\n    >\n      {props => (\n        <AddingForm>\n          <InputWrapper>\n            <InputLabel>\n              Name\n              <Input type=\"text\" name=\"name\" placeholder=\"Andrii Hokhman\" />\n              <ErrWrapper>\n                <ErrorMessage name=\"name\" />\n              </ErrWrapper>\n            </InputLabel>\n            <InputLabel>\n              Phone number\n              <Input type=\"tel\" name=\"number\" placeholder=\"+380XXXXXXXXX\" />\n              <ErrWrapper>\n                <ErrorMessage name=\"number\" />\n              </ErrWrapper>\n            </InputLabel>\n          </InputWrapper>\n          <div>\n            <Button\n              type=\"submit\"\n              disabled={\n                (props.values.name !== '') & (props.values.number !== '')\n                  ? false\n                  : true\n              }\n            >\n              {isLoading && !error ? <Loader size={50} /> : ' Add contact'}\n            </Button>\n          </div>\n        </AddingForm>\n      )}\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const AddingForm = styled(Form)`\n  display: flex;\n  align-items: flex-end;\n  gap: 150px;\n  width: 800px;\n  margin-bottom: 30px;\n  padding: 20px;\n  font-weight: 500;\n\n  color: #2e1392;\n  background-color: #828bbd;\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled(Field)`\n  max-width: 300px;\n  outline: transparent;\n  padding: 10px 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 1px 1px 6px #3d3d3d;\n\n  &::placeholder {\n    font-size: 16px;\n    color: #b6b3b3;\n    padding-left: 10px;\n  }\n`;\nexport const ErrWrapper = styled.span`\n  font-size: 14px;\n  color: red;\n  position: absolute;\n  bottom: -20px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n\n  height: 40px;\n  color: #170674;\n  border: 1px solid #8775f0;\n  border-radius: 20px;\n  padding: 10px 15px;\n  background-color: #72c0e4;\n  cursor: pointer;\n  box-shadow: 2px 2px 5px #3d3d3d;\n\n  &:hover,\n  &:focus {\n    border-color: #170674;\n    background-color: #170674;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    background-color: #ffffff;\n    color: #bdbdbd;\n    font-weight: 500;\n    cursor: auto;\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport {\n  AddingForm,\n  InputLabel,\n  Button,\n  Input,\n  ErrWrapper,\n  InputWrapper,\n} from './EditContactForm.styled';\nimport Loader from 'components/Loader';\nimport { useEditContactMutation } from 'redux/operations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectEditContact } from 'redux/selectors';\nimport { showEditingForm } from 'redux/contactsFormSlice';\n\nconst FormSchema = yup.object().shape({\n  name: yup.string().min(2).required(),\n  number: yup.string().min(13).max(13).phone('UA').required(),\n});\n\nexport default function EditContactForm() {\n  const dispatch = useDispatch();\n  const { name, number, id } = useSelector(selectEditContact);\n  const [editContact, { error, isLoading }] = useEditContactMutation();\n\n  const initialsValues = {\n    name,\n    number,\n  };\n\n  const handleSubmitForm = (values, { resetForm }) => {\n    editContact({ id, values });\n    dispatch(showEditingForm(null));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialsValues}\n      onSubmit={handleSubmitForm}\n      validationSchema={FormSchema}\n    >\n      {props => (\n        <AddingForm>\n          <InputWrapper>\n            <InputLabel>\n              Name\n              <Input type=\"text\" name=\"name\" placeholder=\"Andrii Hokhman\" />\n              <ErrWrapper>\n                <ErrorMessage name=\"name\" />\n              </ErrWrapper>\n            </InputLabel>\n            <InputLabel>\n              Phone number\n              <Input type=\"tel\" name=\"number\" placeholder=\"+380XXXXXXXXX\" />\n              <ErrWrapper>\n                <ErrorMessage name=\"number\" />\n              </ErrWrapper>\n            </InputLabel>\n          </InputWrapper>\n          <div>\n            <Button\n              type=\"submit\"\n              disabled={\n                (props.values.name !== '') & (props.values.number !== '')\n                  ? false\n                  : true\n              }\n            >\n              {isLoading && !error ? <Loader size={50} /> : ' Edit contact'}\n            </Button>\n          </div>\n        </AddingForm>\n      )}\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 300px;\n  outline: transparent;\n  padding: 5px 0 5px 15px;\n\n  border: none;\n  border-radius: 20px;\n  box-shadow: 1px 1px 6px #3d3d3d;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  gap: 100px;\n  font-size: 20px;\n  margin-bottom: 30px;\n  font-weight: 500;\n\n  color: #2e1392;\n`;\n\nexport const Quantity = styled.span`\n  font-weight: 600;\n  font-size: 28px;\n  margin-left: 20px;\n\n  color: #14084e;\n`;\n\nexport const QuantityWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  gap: 11px;\n`;\n","import {\n  InputLabel,\n  FilterInput,\n  FilterWrapper,\n  Quantity,\n  QuantityWrapper,\n} from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { filterContacts } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/operations';\n\nexport default function Filter() {\n  const { data } = useGetContactsQuery();\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilterInputChange = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  const contactsQuantity = data ? data.length : 0;\n  return (\n    <FilterWrapper>\n      <InputLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={handleFilterInputChange}\n        />\n      </InputLabel>\n      <QuantityWrapper>\n        <span>Number of contacts:</span>\n        <Quantity>{contactsQuantity}</Quantity>\n      </QuantityWrapper>\n    </FilterWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  font-size: 24px;\n\n  border-radius: 20px;\n  background-color: #72c0e4;\n  color: #2e1392;\n  box-shadow: 2px 2px 5px #3d3d3d;\n`;\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 800px;\n  min-height: 160px;\n  padding: 20px;\n  background-color: #828bbd;\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding: 20px;\n`;\n","import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport EditContactForm from 'components/EditContactForm';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { LoaderWrapper, Title, ContactsWrapper } from './ContactsPage.styled';\nimport { useGetContactsQuery } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport {\n  selectAddForm,\n  selectShowContacts,\n  selectEditContact,\n} from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const addForm = useSelector(selectAddForm);\n  const showContacts = useSelector(selectShowContacts);\n  const editContact = useSelector(selectEditContact);\n  const { error, isLoading } = useGetContactsQuery();\n\n  return (\n    <>\n      {addForm && editContact === null && <ContactForm />}\n      {showContacts && editContact === null && (\n        <ContactsWrapper>\n          <Title>My contacts list</Title>\n          <Filter />\n          <ContactList />\n          {isLoading && !error && (\n            <LoaderWrapper>\n              <Loader />\n            </LoaderWrapper>\n          )}\n        </ContactsWrapper>\n      )}\n      {editContact !== null && <EditContactForm />}\n    </>\n  );\n}\n"],"names":["List","styled","ListItem","UserWrapper","Wrapper","NumberWrapper","ListItemButton","Spinner","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactListItem","name","number","id","dispatch","useDispatch","useDeleteContactMutation","deleteContact","isLoading","error","size","color","type","onClick","showEditingForm","disabled","ContactList","data","useGetContactsQuery","filterValue","useSelector","selectFilter","visibleContacts","undefined","filter","contact","toLowerCase","includes","trim","sort","a","b","localeCompare","length","map","AddingForm","Form","InputLabel","Input","Field","ErrWrapper","InputWrapper","Button","Loader","radius","wrapperClassName","initialsValues","FormSchema","yup","shape","min","required","max","phone","ContactForm","useAddContactMutation","addContact","initialValues","onSubmit","values","resetForm","alert","showContactsList","validationSchema","props","placeholder","EditContactForm","selectEditContact","useEditContactMutation","editContact","FilterInput","FilterWrapper","Quantity","QuantityWrapper","Filter","contactsQuantity","value","onChange","event","filterContacts","target","Title","ContactsWrapper","LoaderWrapper","ContactsPage","addForm","selectAddForm","showContacts","selectShowContacts"],"sourceRoot":""}